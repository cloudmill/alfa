//
// Modules -> Forms
// --------------------------------------------------


fieldset {
  padding: 0;
  margin: 0;
  border: 0;
  min-width: 0;
}

legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: $line-height-computed;
  font-size: ($base-font-size * 1.5);
  line-height: inherit;
  color: $legend-color;
  border: 0;
}

label {
  display: block;
  max-width: 100%;
  margin: 5px 0;
  color: #8493a8;
}


input[type="search"] {
  @include box-sizing(border-box);
}

input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-top: 1px \9; // IE8-9
  line-height: normal;
}

input[type="file"] {
  display: block;
}

input[type="range"] {
  display: block;
  width: 100%;
}

select[multiple],
select[size] {
  height: auto;
}

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  @include tab-focus;
}


// Common form controls
.control {
  display: block;
  width: 100%;
  height: $input-height-base;
  padding: $padding-base-horizontal 0;
  font-size: $font-size-medium;
  line-height: $base-line-height;
  color: $input-color;
  background-color: $input-bg;
  background-image: none;
  border: none;
  border-bottom: 2px solid $input-border;
  height: 80px;
  @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);
  font-family: 'Montserrat';

  &:hover {
    border-color: $base-color-main;
  }

  @include form-control-focus;

  @include placeholder;

}

// Reset height for `textarea`s
textarea.control {
  height: auto;
  resize: none;
  font-family: 'Montserrat';
}

select.control {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  padding-right: 30px;
  //background: url("../images/icons/arrow-down.png") no-repeat center right 10px, $input-bg;
  &:focus {
    //background: url("../images/icons/arrow-up.png") no-repeat center right 10px, $input-bg;
  }
}

// Search inputs in iOS
input[type="search"] {
  -webkit-appearance: none;
  padding: $padding-base-vertical $padding-base-horizontal;
  font-size: $base-font-size;
  line-height: $base-line-height;
  border: 1px solid $input-border;
}


.form__group {
  margin-bottom: $form-group-margin-bottom / 2;
  @media screen and (min-width: $screen-md-min) {
    margin-bottom: $form-group-margin-bottom;
  }
}


// Checkboxes and radios
.radio,
.checkbox {
  position: relative;
  display: block;
  label {
    padding-left: 50px;
    margin: 0;
    cursor: pointer;

    font-size: 11px;
    color: $black;
    font-weight: 500;
    line-height: 140%;
    @media screen and (min-width: $screen-md-min) {
      font-size: 14px;
    }

    a {
      color: $base-color-main;
    }


    &:after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      display: block;
      width: 30px;
      height: 30px;
      background-color: white;
      @include transitionEaseInOut(background-color);
      border: 2px solid $base-color-main;
      @media screen and (min-width: $screen-md-min) {
        top: 4px;
      }
    }
  }

  &.error {
    color: $color-type-2a;
    label {
      color: $color-type-2a;
      &:after {
        border-color: $color-type-2a;
      }
    }
  }
}

.checkbox {
  input[type="checkbox"] {display: none;}
}
.radio {
  input[type="radio"] {display: none;}
}
.checkbox label{
  &:after {
    @include border-radius(50%);
  }
}
.radio label {
  &:after {
    @include border-radius(50%);
  }
}

.checkbox input[type="checkbox"]:checked + label:after {
  background: $base-color-main;
}
.radio input[type="radio"]:checked + label:after {
  background: $base-color-main;
}


.radio + .radio,
.checkbox + .checkbox {
  margin-top: 20px;
}

.radio--inline,
.checkbox--inline {
  position: relative;
  display: inline-block;
  padding-left: 20px;
  margin-bottom: 0;
  vertical-align: middle;
  font-weight: normal;
  cursor: pointer;
}
.radio--inline + .radio--inline,
.checkbox--inline + .checkbox--inline {
  margin-top: 0;
  margin-left: 10px;
}

.input__file {
  position: relative;
  display: inline-block;
  cursor: pointer;
  @include transitionEaseInOut(color);
  &-js {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 9;
    opacity: 0;
  }
  .input__text-js {
    font-size: 16px;
    display: flex;
    align-items: center;
    span {
      margin-left: 10px;
      i {
        vertical-align: middle;
      }
    }
  }
  &:hover {
    color: $base-color-main;
  }
}


/* Hoshi */
.input {
  position: relative;
  z-index: 1;
  //display: inline-block;
  //vertical-align: top;
  overflow: hidden;

  &__field {
    position: relative;
    display: block;
    float: right;
    width: 100%;
    border: none;
    border-radius: 0;
    -webkit-appearance: none;
    &:focus {
      outline: none;

    }
  }

  &__label {
    display: inline-block;
    position: absolute;
    bottom: 0;
    left: 0;
    height: 100%;
    margin: 0;
    text-align: left;
    color: $black;
    width: 100%;
    font-size: 20px;
    line-height: 24px;
    pointer-events: none;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    &-content {
      position: absolute;
      display: block;
      padding: 1.6em 0;
      width: 100%;
    }

    &::before,
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: -2px;
      width: 100%;
      height: 100%;
      border-bottom: 2px solid $gray;
    }
    &::after {
      border-bottom: 2px solid $base-color-main;
      transform: translate3d(-100%, 0, 0);
      @include transitionEaseInOut(transform, 0.3s);
    }
  }
}

.input__field:focus + .input__label::after,
.input--filled .input__label::after {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.input__field:focus + .input__label .input__label-content,
.input--filled .input__label-content {
  animation: anim-1 0.3s forwards;
}


.error .input__label::after {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  border-bottom: 2px solid $color-type-2a;
}
.error {
  &-content {
    font-weight: 500;
    font-size: 12px;
    line-height: 15px;
    color: $color-type-2a;
    position: absolute;
    left: 0;
    bottom: 5px;
  }
}
.error .input__label-content {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

@keyframes anim-1 {
  50% {
    opacity: 0;
    -webkit-transform: translate3d(1em, 0, 0);
    transform: translate3d(1em, 0, 0);
  }
  51% {
    opacity: 0;
    -webkit-transform: translate3d(-1em, -30%, 0);
    transform: translate3d(-1em, -30%, 0);
  }
  100% {
    opacity: 1;
    font-size: 12px;
    line-height: 15px;
    -webkit-transform: translate3d(0, -40%, 0);
    transform: translate3d(0, -30%, 0);
  }
}
